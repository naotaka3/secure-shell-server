name: build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  ci:
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    steps:
      - name: Set up GOPATH
        run: |
          echo "GOPATH=$HOME/go" >> $GITHUB_ENV
          echo "PATH=$GOPATH/bin:$PATH" >> $GITHUB_ENV
          echo "GOMODCACHE=$HOME/pkg/mod" >> $GITHUB_ENV
          echo "GOCACHE=$HOME/.cache/go-build" >> $GITHUB_ENV

      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '^1.24.1'
      - run: go version

      - name: Build
        run: make ci

      # - name: Upload coverage
      #   uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      #   with:
      #     name: coverage-${{ matrix.os }}
      #     path: coverage.*

      # - run: go tool goreleaser release --clean --snapshot
      #   if: ${{ runner.os == 'Linux' }}

      # - name: Upload dist
      #   uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      #   with:
      #     name: dist-${{ matrix.os }}
      #     path: dist

      # - name: Upload coverage to Codecov
      #   uses: codecov/codecov-action@0565863a31f2c772f9f0395002a31e3f06189574 # v5.4.0
      #   with:
      #     fail_ci_if_error: true
      #     files: ./coverage.out
      #     token: ${{ secrets.CODECOV_TOKEN }}
